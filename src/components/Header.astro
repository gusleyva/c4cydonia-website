---
// Header.astro
import ThemeToggle from './ThemeToggle.astro';
import LanguageToggle from './LanguageToggle.astro';

// Get current page path for highlighting active nav item
const { pathname } = Astro.url;

// Navigation items - we'll have both Spanish and English versions
const navItems = {
  es: [
    { text: "Inicio", href: "/" },
    { text: "Servicios", href: "/services" },
    { text: "Quienes Somos", href: "/about" },
    { text: "Blog", href: "/blog" },
    { text: "Contacto", href: "/contact" },
  ],
  en: [
    { text: "Home", href: "/" },
    { text: "Services", href: "/services" },
    { text: "About Us", href: "/about" },
    { text: "Blog", href: "/blog" },
    { text: "Contact", href: "/contact" },
  ]
};

// For now, default to Spanish navigation, we'll implement language switching later
const currentLang = "es";
---

<header class="bg-white dark:bg-gray-900 shadow-sm">
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <div class="flex items-center">
        <a href="/" class="flex items-center gap-2">
          <img src="/images/logo.png" alt="C4Cydonia Logo" class="h-8 w-8 rounded-full" />
          <span class="text-xl font-bold text-gray-900 dark:text-white">C4Cydonia</span>
        </a>
      </div>
      
      <nav class="hidden md:flex space-x-8">
        <a href="/" class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400">
          Inicio
        </a>
        <a href="/about" class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400">
          Quienes Somos
        </a>
        <a href="/services" class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400">
          Servicios
        </a>
        <a href="/blog" class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400">
          Blog
        </a>
        <a href="/contact" class="text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400">
          Contacto
        </a>
      </nav>
      
      <div class="flex items-center space-x-4">
        <LanguageToggle />
        <ThemeToggle />
        
        <!-- Mobile menu button -->
        <button 
          type="button" 
          class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
          aria-controls="mobile-menu" 
          aria-expanded="false"
          id="mobile-menu-button"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <svg class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Mobile menu, show/hide based on menu state -->
  <div class="md:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      <a href="/" class="block px-3 py-2 rounded-md text-base font-medium text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800">
        Inicio
      </a>
      <a href="/about" class="block px-3 py-2 rounded-md text-base font-medium text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800">
        Quienes Somos
      </a>
      <a href="/services" class="block px-3 py-2 rounded-md text-base font-medium text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800">
        Servicios
      </a>
      <a href="/blog" class="block px-3 py-2 rounded-md text-base font-medium text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800">
        Blog
      </a>
      <a href="/contact" class="block px-3 py-2 rounded-md text-base font-medium text-gray-600 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800">
        Contacto
      </a>
    </div>
  </div>
</header>

<script>
  // Define types for our navigation items
  type Language = 'en' | 'es';
  type NavItems = {
    [K in Language]: {
      [key: string]: string;
    };
  };

  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcons = mobileMenuButton?.querySelectorAll('svg');
  
  if (mobileMenuButton && mobileMenu && menuIcons) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      
      // Toggle menu visibility
      mobileMenu.classList.toggle('hidden');
      
      // Toggle aria-expanded attribute
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      
      // Toggle menu icons
      menuIcons[0].classList.toggle('hidden');
      menuIcons[1].classList.toggle('hidden');
    });
  }
  
  // Update navigation text based on language
  function updateNavLanguage(lang: Language) {
    const navItems: NavItems = {
      en: {
        'Inicio': 'Home',
        'Quienes Somos': 'About Us',
        'Servicios': 'Services',
        'Blog': 'Blog',
        'Contacto': 'Contact'
      },
      es: {
        'Home': 'Inicio',
        'About Us': 'Quienes Somos',
        'Services': 'Servicios',
        'Blog': 'Blog',
        'Contact': 'Contacto'
      }
    };
    
    // Update desktop navigation
    const desktopNav = document.querySelector('nav.md\\:flex');
    if (desktopNav) {
      const links = desktopNav.querySelectorAll('a');
      links.forEach(link => {
        const currentText = link.textContent?.trim();
        if (currentText && currentText in navItems[lang]) {
          link.textContent = navItems[lang][currentText];
        }
      });
    }
    
    // Update mobile navigation
    const mobileNav = document.getElementById('mobile-menu');
    if (mobileNav) {
      const links = mobileNav.querySelectorAll('a');
      links.forEach(link => {
        const currentText = link.textContent?.trim();
        if (currentText && currentText in navItems[lang]) {
          link.textContent = navItems[lang][currentText];
        }
      });
    }
  }
  
  // Get current language from localStorage
  const storedLanguage = (localStorage.getItem('language') || 'es') as Language;
  
  // Update navigation on page load
  updateNavLanguage(storedLanguage);
  
  // Define the custom event type
  interface LanguageChangeEvent extends CustomEvent {
    detail: {
      language: Language;
    };
  }
  
  // Listen for language changes
  document.addEventListener('languageChanged', ((e: Event) => {
    // Type assertion to access the detail property
    const customEvent = e as LanguageChangeEvent;
    if (customEvent.detail?.language) {
      updateNavLanguage(customEvent.detail.language);
    }
  }) as EventListener);
</script>